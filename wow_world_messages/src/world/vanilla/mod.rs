pub(crate) mod activate_taxi_reply;
pub use activate_taxi_reply::*;
pub(crate) mod addon;
pub use addon::*;
pub(crate) mod addon_info;
pub use addon_info::*;
pub(crate) mod addon_type;
pub use addon_type::*;
pub(crate) mod ai_reaction;
pub use ai_reaction::*;
pub(crate) mod area;
pub use area::*;
pub(crate) mod auction_command_action;
pub use auction_command_action::*;
pub(crate) mod auction_command_result;
pub use auction_command_result::*;
pub(crate) mod auction_list_item;
pub use auction_list_item::*;
pub(crate) mod aura_log;
pub use aura_log::*;
pub(crate) mod aura_type;
pub use aura_type::*;
pub(crate) mod battlefield_port_action;
pub use battlefield_port_action::*;
pub(crate) mod battleground_end_status;
pub use battleground_end_status::*;
pub(crate) mod battleground_player;
pub use battleground_player::*;
pub(crate) mod battleground_player_position;
pub use battleground_player_position::*;
pub(crate) mod battleground_winner;
pub use battleground_winner::*;
pub(crate) mod bg_type_id;
pub use bg_type_id::*;
pub(crate) mod buy_bank_slot_result;
pub use buy_bank_slot_result::*;
pub(crate) mod buy_result;
pub use buy_result::*;
pub(crate) mod buyback_slot;
pub use buyback_slot::*;
pub(crate) mod cast_failure_reason;
pub use cast_failure_reason::*;
pub(crate) mod cast_flags;
pub use cast_flags::*;
pub(crate) mod channel_flags;
pub use channel_flags::*;
pub(crate) mod channel_member;
pub use channel_member::*;
pub(crate) mod channel_member_flags;
pub use channel_member_flags::*;
pub(crate) mod character;
pub use character::*;
pub(crate) mod character_flags;
pub use character_flags::*;
pub(crate) mod character_gear;
pub use character_gear::*;
pub(crate) mod chat_notify;
pub use chat_notify::*;
pub(crate) mod chat_type;
pub use chat_type::*;
pub(crate) mod cinematic_sequence_id;
pub use cinematic_sequence_id::*;
pub(crate) mod class;
pub use class::*;
pub(crate) mod cmsg_accept_trade;
pub use cmsg_accept_trade::*;
pub(crate) mod cmsg_activatetaxi;
pub use cmsg_activatetaxi::*;
pub(crate) mod cmsg_activatetaxiexpress;
pub use cmsg_activatetaxiexpress::*;
pub(crate) mod cmsg_add_friend;
pub use cmsg_add_friend::*;
pub(crate) mod cmsg_add_ignore;
pub use cmsg_add_ignore::*;
pub(crate) mod cmsg_area_spirit_healer_query;
pub use cmsg_area_spirit_healer_query::*;
pub(crate) mod cmsg_area_spirit_healer_queue;
pub use cmsg_area_spirit_healer_queue::*;
pub(crate) mod cmsg_areatrigger;
pub use cmsg_areatrigger::*;
pub(crate) mod cmsg_attackstop;
pub use cmsg_attackstop::*;
pub(crate) mod cmsg_attackswing;
pub use cmsg_attackswing::*;
pub(crate) mod cmsg_auction_list_bidder_items;
pub use cmsg_auction_list_bidder_items::*;
pub(crate) mod cmsg_auction_list_items;
pub use cmsg_auction_list_items::*;
pub(crate) mod cmsg_auction_list_owner_items;
pub use cmsg_auction_list_owner_items::*;
pub(crate) mod cmsg_auction_place_bid;
pub use cmsg_auction_place_bid::*;
pub(crate) mod cmsg_auction_remove_item;
pub use cmsg_auction_remove_item::*;
pub(crate) mod cmsg_auction_sell_item;
pub use cmsg_auction_sell_item::*;
pub(crate) mod cmsg_auth_session;
pub use cmsg_auth_session::*;
pub(crate) mod cmsg_autobank_item;
pub use cmsg_autobank_item::*;
pub(crate) mod cmsg_autoequip_item;
pub use cmsg_autoequip_item::*;
pub(crate) mod cmsg_autoequip_item_slot;
pub use cmsg_autoequip_item_slot::*;
pub(crate) mod cmsg_autostore_bag_item;
pub use cmsg_autostore_bag_item::*;
pub(crate) mod cmsg_autostore_bank_item;
pub use cmsg_autostore_bank_item::*;
pub(crate) mod cmsg_autostore_loot_item;
pub use cmsg_autostore_loot_item::*;
pub(crate) mod cmsg_banker_activate;
pub use cmsg_banker_activate::*;
pub(crate) mod cmsg_battlefield_join;
pub use cmsg_battlefield_join::*;
pub(crate) mod cmsg_battlefield_list;
pub use cmsg_battlefield_list::*;
pub(crate) mod cmsg_battlefield_port;
pub use cmsg_battlefield_port::*;
pub(crate) mod cmsg_battlefield_status;
pub use cmsg_battlefield_status::*;
pub(crate) mod cmsg_battlemaster_hello;
pub use cmsg_battlemaster_hello::*;
pub(crate) mod cmsg_battlemaster_join;
pub use cmsg_battlemaster_join::*;
pub(crate) mod cmsg_begin_trade;
pub use cmsg_begin_trade::*;
pub(crate) mod cmsg_binder_activate;
pub use cmsg_binder_activate::*;
pub(crate) mod cmsg_bug;
pub use cmsg_bug::*;
pub(crate) mod cmsg_busy_trade;
pub use cmsg_busy_trade::*;
pub(crate) mod cmsg_buy_bank_slot;
pub use cmsg_buy_bank_slot::*;
pub(crate) mod cmsg_buy_item;
pub use cmsg_buy_item::*;
pub(crate) mod cmsg_buy_item_in_slot;
pub use cmsg_buy_item_in_slot::*;
pub(crate) mod cmsg_buy_stable_slot;
pub use cmsg_buy_stable_slot::*;
pub(crate) mod cmsg_buyback_item;
pub use cmsg_buyback_item::*;
pub(crate) mod cmsg_cancel_aura;
pub use cmsg_cancel_aura::*;
pub(crate) mod cmsg_cancel_auto_repeat_spell;
pub use cmsg_cancel_auto_repeat_spell::*;
pub(crate) mod cmsg_cancel_cast;
pub use cmsg_cancel_cast::*;
pub(crate) mod cmsg_cancel_channelling;
pub use cmsg_cancel_channelling::*;
pub(crate) mod cmsg_cancel_growth_aura;
pub use cmsg_cancel_growth_aura::*;
pub(crate) mod cmsg_cancel_trade;
pub use cmsg_cancel_trade::*;
pub(crate) mod cmsg_cast_spell;
pub use cmsg_cast_spell::*;
pub(crate) mod cmsg_channel_announcements;
pub use cmsg_channel_announcements::*;
pub(crate) mod cmsg_channel_ban;
pub use cmsg_channel_ban::*;
pub(crate) mod cmsg_channel_invite;
pub use cmsg_channel_invite::*;
pub(crate) mod cmsg_channel_kick;
pub use cmsg_channel_kick::*;
pub(crate) mod cmsg_channel_list;
pub use cmsg_channel_list::*;
pub(crate) mod cmsg_channel_moderate;
pub use cmsg_channel_moderate::*;
pub(crate) mod cmsg_channel_moderator;
pub use cmsg_channel_moderator::*;
pub(crate) mod cmsg_channel_mute;
pub use cmsg_channel_mute::*;
pub(crate) mod cmsg_channel_owner;
pub use cmsg_channel_owner::*;
pub(crate) mod cmsg_channel_password;
pub use cmsg_channel_password::*;
pub(crate) mod cmsg_channel_set_owner;
pub use cmsg_channel_set_owner::*;
pub(crate) mod cmsg_channel_unban;
pub use cmsg_channel_unban::*;
pub(crate) mod cmsg_channel_unmoderator;
pub use cmsg_channel_unmoderator::*;
pub(crate) mod cmsg_channel_unmute;
pub use cmsg_channel_unmute::*;
pub(crate) mod cmsg_char_create;
pub use cmsg_char_create::*;
pub(crate) mod cmsg_char_delete;
pub use cmsg_char_delete::*;
pub(crate) mod cmsg_char_enum;
pub use cmsg_char_enum::*;
pub(crate) mod cmsg_char_rename;
pub use cmsg_char_rename::*;
pub(crate) mod cmsg_chat_ignored;
pub use cmsg_chat_ignored::*;
pub(crate) mod cmsg_clear_trade_item;
pub use cmsg_clear_trade_item::*;
pub(crate) mod cmsg_complete_cinematic;
pub use cmsg_complete_cinematic::*;
pub(crate) mod cmsg_creature_query;
pub use cmsg_creature_query::*;
pub(crate) mod cmsg_del_friend;
pub use cmsg_del_friend::*;
pub(crate) mod cmsg_del_ignore;
pub use cmsg_del_ignore::*;
pub(crate) mod cmsg_destroyitem;
pub use cmsg_destroyitem::*;
pub(crate) mod cmsg_duel_accepted;
pub use cmsg_duel_accepted::*;
pub(crate) mod cmsg_duel_cancelled;
pub use cmsg_duel_cancelled::*;
pub(crate) mod cmsg_emote;
pub use cmsg_emote::*;
pub(crate) mod cmsg_far_sight;
pub use cmsg_far_sight::*;
pub(crate) mod cmsg_force_move_root_ack;
pub use cmsg_force_move_root_ack::*;
pub(crate) mod cmsg_force_move_unroot_ack;
pub use cmsg_force_move_unroot_ack::*;
pub(crate) mod cmsg_force_run_back_speed_change_ack;
pub use cmsg_force_run_back_speed_change_ack::*;
pub(crate) mod cmsg_force_run_speed_change_ack;
pub use cmsg_force_run_speed_change_ack::*;
pub(crate) mod cmsg_force_swim_back_speed_change_ack;
pub use cmsg_force_swim_back_speed_change_ack::*;
pub(crate) mod cmsg_force_swim_speed_change_ack;
pub use cmsg_force_swim_speed_change_ack::*;
pub(crate) mod cmsg_force_turn_rate_change_ack;
pub use cmsg_force_turn_rate_change_ack::*;
pub(crate) mod cmsg_force_walk_speed_change_ack;
pub use cmsg_force_walk_speed_change_ack::*;
pub(crate) mod cmsg_friend_list;
pub use cmsg_friend_list::*;
pub(crate) mod cmsg_gameobj_use;
pub use cmsg_gameobj_use::*;
pub(crate) mod cmsg_gameobject_query;
pub use cmsg_gameobject_query::*;
pub(crate) mod cmsg_get_mail_list;
pub use cmsg_get_mail_list::*;
pub(crate) mod cmsg_gmsurvey_submit;
pub use cmsg_gmsurvey_submit::*;
pub(crate) mod cmsg_gmticket_create;
pub use cmsg_gmticket_create::*;
pub(crate) mod cmsg_gmticket_deleteticket;
pub use cmsg_gmticket_deleteticket::*;
pub(crate) mod cmsg_gmticket_getticket;
pub use cmsg_gmticket_getticket::*;
pub(crate) mod cmsg_gmticket_systemstatus;
pub use cmsg_gmticket_systemstatus::*;
pub(crate) mod cmsg_gmticket_updatetext;
pub use cmsg_gmticket_updatetext::*;
pub(crate) mod cmsg_gossip_hello;
pub use cmsg_gossip_hello::*;
pub(crate) mod cmsg_gossip_select_option;
pub use cmsg_gossip_select_option::*;
pub(crate) mod cmsg_group_accept;
pub use cmsg_group_accept::*;
pub(crate) mod cmsg_group_assistant_leader;
pub use cmsg_group_assistant_leader::*;
pub(crate) mod cmsg_group_change_sub_group;
pub use cmsg_group_change_sub_group::*;
pub(crate) mod cmsg_group_decline;
pub use cmsg_group_decline::*;
pub(crate) mod cmsg_group_disband;
pub use cmsg_group_disband::*;
pub(crate) mod cmsg_group_invite;
pub use cmsg_group_invite::*;
pub(crate) mod cmsg_group_raid_convert;
pub use cmsg_group_raid_convert::*;
pub(crate) mod cmsg_group_set_leader;
pub use cmsg_group_set_leader::*;
pub(crate) mod cmsg_group_swap_sub_group;
pub use cmsg_group_swap_sub_group::*;
pub(crate) mod cmsg_group_uninvite;
pub use cmsg_group_uninvite::*;
pub(crate) mod cmsg_group_uninvite_guid;
pub use cmsg_group_uninvite_guid::*;
pub(crate) mod cmsg_guild_accept;
pub use cmsg_guild_accept::*;
pub(crate) mod cmsg_guild_add_rank;
pub use cmsg_guild_add_rank::*;
pub(crate) mod cmsg_guild_create;
pub use cmsg_guild_create::*;
pub(crate) mod cmsg_guild_decline;
pub use cmsg_guild_decline::*;
pub(crate) mod cmsg_guild_del_rank;
pub use cmsg_guild_del_rank::*;
pub(crate) mod cmsg_guild_demote;
pub use cmsg_guild_demote::*;
pub(crate) mod cmsg_guild_disband;
pub use cmsg_guild_disband::*;
pub(crate) mod cmsg_guild_info;
pub use cmsg_guild_info::*;
pub(crate) mod cmsg_guild_info_text;
pub use cmsg_guild_info_text::*;
pub(crate) mod cmsg_guild_invite;
pub use cmsg_guild_invite::*;
pub(crate) mod cmsg_guild_leader;
pub use cmsg_guild_leader::*;
pub(crate) mod cmsg_guild_leave;
pub use cmsg_guild_leave::*;
pub(crate) mod cmsg_guild_motd;
pub use cmsg_guild_motd::*;
pub(crate) mod cmsg_guild_promote;
pub use cmsg_guild_promote::*;
pub(crate) mod cmsg_guild_query;
pub use cmsg_guild_query::*;
pub(crate) mod cmsg_guild_rank;
pub use cmsg_guild_rank::*;
pub(crate) mod cmsg_guild_remove;
pub use cmsg_guild_remove::*;
pub(crate) mod cmsg_guild_roster;
pub use cmsg_guild_roster::*;
pub(crate) mod cmsg_guild_set_officer_note;
pub use cmsg_guild_set_officer_note::*;
pub(crate) mod cmsg_guild_set_public_note;
pub use cmsg_guild_set_public_note::*;
pub(crate) mod cmsg_ignore_trade;
pub use cmsg_ignore_trade::*;
pub(crate) mod cmsg_initiate_trade;
pub use cmsg_initiate_trade::*;
pub(crate) mod cmsg_inspect;
pub use cmsg_inspect::*;
pub(crate) mod cmsg_item_name_query;
pub use cmsg_item_name_query::*;
pub(crate) mod cmsg_item_query_single;
pub use cmsg_item_query_single::*;
pub(crate) mod cmsg_item_text_query;
pub use cmsg_item_text_query::*;
pub(crate) mod cmsg_join_channel;
pub use cmsg_join_channel::*;
pub(crate) mod cmsg_learn_talent;
pub use cmsg_learn_talent::*;
pub(crate) mod cmsg_leave_battlefield;
pub use cmsg_leave_battlefield::*;
pub(crate) mod cmsg_leave_channel;
pub use cmsg_leave_channel::*;
pub(crate) mod cmsg_list_inventory;
pub use cmsg_list_inventory::*;
pub(crate) mod cmsg_logout_cancel;
pub use cmsg_logout_cancel::*;
pub(crate) mod cmsg_logout_request;
pub use cmsg_logout_request::*;
pub(crate) mod cmsg_loot;
pub use cmsg_loot::*;
pub(crate) mod cmsg_loot_master_give;
pub use cmsg_loot_master_give::*;
pub(crate) mod cmsg_loot_method;
pub use cmsg_loot_method::*;
pub(crate) mod cmsg_loot_money;
pub use cmsg_loot_money::*;
pub(crate) mod cmsg_loot_release;
pub use cmsg_loot_release::*;
pub(crate) mod cmsg_loot_roll;
pub use cmsg_loot_roll::*;
pub(crate) mod cmsg_mail_create_text_item;
pub use cmsg_mail_create_text_item::*;
pub(crate) mod cmsg_mail_delete;
pub use cmsg_mail_delete::*;
pub(crate) mod cmsg_mail_mark_as_read;
pub use cmsg_mail_mark_as_read::*;
pub(crate) mod cmsg_mail_return_to_sender;
pub use cmsg_mail_return_to_sender::*;
pub(crate) mod cmsg_mail_take_item;
pub use cmsg_mail_take_item::*;
pub(crate) mod cmsg_mail_take_money;
pub use cmsg_mail_take_money::*;
pub(crate) mod cmsg_meetingstone_info;
pub use cmsg_meetingstone_info::*;
pub(crate) mod cmsg_meetingstone_join;
pub use cmsg_meetingstone_join::*;
pub(crate) mod cmsg_meetingstone_leave;
pub use cmsg_meetingstone_leave::*;
pub(crate) mod cmsg_messagechat;
pub use cmsg_messagechat::*;
pub(crate) mod cmsg_mountspecial_anim;
pub use cmsg_mountspecial_anim::*;
pub(crate) mod cmsg_move_fall_reset;
pub use cmsg_move_fall_reset::*;
pub(crate) mod cmsg_move_feather_fall_ack;
pub use cmsg_move_feather_fall_ack::*;
pub(crate) mod cmsg_move_hover_ack;
pub use cmsg_move_hover_ack::*;
pub(crate) mod cmsg_move_knock_back_ack;
pub use cmsg_move_knock_back_ack::*;
pub(crate) mod cmsg_move_not_active_mover;
pub use cmsg_move_not_active_mover::*;
pub(crate) mod cmsg_move_set_raw_position;
pub use cmsg_move_set_raw_position::*;
pub(crate) mod cmsg_move_spline_done;
pub use cmsg_move_spline_done::*;
pub(crate) mod cmsg_move_time_skipped;
pub use cmsg_move_time_skipped::*;
pub(crate) mod cmsg_move_water_walk_ack;
pub use cmsg_move_water_walk_ack::*;
pub(crate) mod cmsg_name_query;
pub use cmsg_name_query::*;
pub(crate) mod cmsg_next_cinematic_camera;
pub use cmsg_next_cinematic_camera::*;
pub(crate) mod cmsg_npc_text_query;
pub use cmsg_npc_text_query::*;
pub(crate) mod cmsg_offer_petition;
pub use cmsg_offer_petition::*;
pub(crate) mod cmsg_open_item;
pub use cmsg_open_item::*;
pub(crate) mod cmsg_page_text_query;
pub use cmsg_page_text_query::*;
pub(crate) mod cmsg_pet_abandon;
pub use cmsg_pet_abandon::*;
pub(crate) mod cmsg_pet_action;
pub use cmsg_pet_action::*;
pub(crate) mod cmsg_pet_cancel_aura;
pub use cmsg_pet_cancel_aura::*;
pub(crate) mod cmsg_pet_cast_spell;
pub use cmsg_pet_cast_spell::*;
pub(crate) mod cmsg_pet_name_query;
pub use cmsg_pet_name_query::*;
pub(crate) mod cmsg_pet_rename;
pub use cmsg_pet_rename::*;
pub(crate) mod cmsg_pet_set_action;
pub use cmsg_pet_set_action::*;
pub(crate) mod cmsg_pet_spell_autocast;
pub use cmsg_pet_spell_autocast::*;
pub(crate) mod cmsg_pet_stop_attack;
pub use cmsg_pet_stop_attack::*;
pub(crate) mod cmsg_pet_unlearn;
pub use cmsg_pet_unlearn::*;
pub(crate) mod cmsg_petition_buy;
pub use cmsg_petition_buy::*;
pub(crate) mod cmsg_petition_query;
pub use cmsg_petition_query::*;
pub(crate) mod cmsg_petition_show_signatures;
pub use cmsg_petition_show_signatures::*;
pub(crate) mod cmsg_petition_showlist;
pub use cmsg_petition_showlist::*;
pub(crate) mod cmsg_petition_sign;
pub use cmsg_petition_sign::*;
pub(crate) mod cmsg_ping;
pub use cmsg_ping::*;
pub(crate) mod cmsg_played_time;
pub use cmsg_played_time::*;
pub(crate) mod cmsg_player_login;
pub use cmsg_player_login::*;
pub(crate) mod cmsg_player_logout;
pub use cmsg_player_logout::*;
pub(crate) mod cmsg_pushquesttoparty;
pub use cmsg_pushquesttoparty::*;
pub(crate) mod cmsg_query_time;
pub use cmsg_query_time::*;
pub(crate) mod cmsg_quest_confirm_accept;
pub use cmsg_quest_confirm_accept::*;
pub(crate) mod cmsg_quest_query;
pub use cmsg_quest_query::*;
pub(crate) mod cmsg_questgiver_accept_quest;
pub use cmsg_questgiver_accept_quest::*;
pub(crate) mod cmsg_questgiver_cancel;
pub use cmsg_questgiver_cancel::*;
pub(crate) mod cmsg_questgiver_choose_reward;
pub use cmsg_questgiver_choose_reward::*;
pub(crate) mod cmsg_questgiver_complete_quest;
pub use cmsg_questgiver_complete_quest::*;
pub(crate) mod cmsg_questgiver_hello;
pub use cmsg_questgiver_hello::*;
pub(crate) mod cmsg_questgiver_query_quest;
pub use cmsg_questgiver_query_quest::*;
pub(crate) mod cmsg_questgiver_quest_autolaunch;
pub use cmsg_questgiver_quest_autolaunch::*;
pub(crate) mod cmsg_questgiver_request_reward;
pub use cmsg_questgiver_request_reward::*;
pub(crate) mod cmsg_questgiver_status_query;
pub use cmsg_questgiver_status_query::*;
pub(crate) mod cmsg_questlog_remove_quest;
pub use cmsg_questlog_remove_quest::*;
pub(crate) mod cmsg_questlog_swap_quest;
pub use cmsg_questlog_swap_quest::*;
pub(crate) mod cmsg_read_item;
pub use cmsg_read_item::*;
pub(crate) mod cmsg_reclaim_corpse;
pub use cmsg_reclaim_corpse::*;
pub(crate) mod cmsg_repair_item;
pub use cmsg_repair_item::*;
pub(crate) mod cmsg_repop_request;
pub use cmsg_repop_request::*;
pub(crate) mod cmsg_request_account_data;
pub use cmsg_request_account_data::*;
pub(crate) mod cmsg_request_party_member_stats;
pub use cmsg_request_party_member_stats::*;
pub(crate) mod cmsg_request_pet_info;
pub use cmsg_request_pet_info::*;
pub(crate) mod cmsg_request_raid_info;
pub use cmsg_request_raid_info::*;
pub(crate) mod cmsg_reset_instances;
pub use cmsg_reset_instances::*;
pub(crate) mod cmsg_resurrect_response;
pub use cmsg_resurrect_response::*;
pub(crate) mod cmsg_self_res;
pub use cmsg_self_res::*;
pub(crate) mod cmsg_sell_item;
pub use cmsg_sell_item::*;
pub(crate) mod cmsg_send_mail;
pub use cmsg_send_mail::*;
pub(crate) mod cmsg_set_action_button;
pub use cmsg_set_action_button::*;
pub(crate) mod cmsg_set_actionbar_toggles;
pub use cmsg_set_actionbar_toggles::*;
pub(crate) mod cmsg_set_active_mover;
pub use cmsg_set_active_mover::*;
pub(crate) mod cmsg_set_ammo;
pub use cmsg_set_ammo::*;
pub(crate) mod cmsg_set_faction_atwar;
pub use cmsg_set_faction_atwar::*;
pub(crate) mod cmsg_set_faction_inactive;
pub use cmsg_set_faction_inactive::*;
pub(crate) mod cmsg_set_selection;
pub use cmsg_set_selection::*;
pub(crate) mod cmsg_set_target_obsolete;
pub use cmsg_set_target_obsolete::*;
pub(crate) mod cmsg_set_trade_gold;
pub use cmsg_set_trade_gold::*;
pub(crate) mod cmsg_set_trade_item;
pub use cmsg_set_trade_item::*;
pub(crate) mod cmsg_set_watched_faction;
pub use cmsg_set_watched_faction::*;
pub(crate) mod cmsg_setsheathed;
pub use cmsg_setsheathed::*;
pub(crate) mod cmsg_spirit_healer_activate;
pub use cmsg_spirit_healer_activate::*;
pub(crate) mod cmsg_split_item;
pub use cmsg_split_item::*;
pub(crate) mod cmsg_stable_pet;
pub use cmsg_stable_pet::*;
pub(crate) mod cmsg_stable_swap_pet;
pub use cmsg_stable_swap_pet::*;
pub(crate) mod cmsg_standstatechange;
pub use cmsg_standstatechange::*;
pub(crate) mod cmsg_summon_response;
pub use cmsg_summon_response::*;
pub(crate) mod cmsg_swap_inv_item;
pub use cmsg_swap_inv_item::*;
pub(crate) mod cmsg_swap_item;
pub use cmsg_swap_item::*;
pub(crate) mod cmsg_taxinode_status_query;
pub use cmsg_taxinode_status_query::*;
pub(crate) mod cmsg_taxiqueryavailablenodes;
pub use cmsg_taxiqueryavailablenodes::*;
pub(crate) mod cmsg_teleport_to_unit;
pub use cmsg_teleport_to_unit::*;
pub(crate) mod cmsg_text_emote;
pub use cmsg_text_emote::*;
pub(crate) mod cmsg_toggle_cloak;
pub use cmsg_toggle_cloak::*;
pub(crate) mod cmsg_toggle_helm;
pub use cmsg_toggle_helm::*;
pub(crate) mod cmsg_toggle_pvp;
pub use cmsg_toggle_pvp::*;
pub(crate) mod cmsg_trainer_buy_spell;
pub use cmsg_trainer_buy_spell::*;
pub(crate) mod cmsg_trainer_list;
pub use cmsg_trainer_list::*;
pub(crate) mod cmsg_turn_in_petition;
pub use cmsg_turn_in_petition::*;
pub(crate) mod cmsg_tutorial_clear;
pub use cmsg_tutorial_clear::*;
pub(crate) mod cmsg_tutorial_flag;
pub use cmsg_tutorial_flag::*;
pub(crate) mod cmsg_tutorial_reset;
pub use cmsg_tutorial_reset::*;
pub(crate) mod cmsg_unaccept_trade;
pub use cmsg_unaccept_trade::*;
pub(crate) mod cmsg_unlearn_skill;
pub use cmsg_unlearn_skill::*;
pub(crate) mod cmsg_unstable_pet;
pub use cmsg_unstable_pet::*;
pub(crate) mod cmsg_update_account_data;
pub use cmsg_update_account_data::*;
pub(crate) mod cmsg_use_item;
pub use cmsg_use_item::*;
pub(crate) mod cmsg_warden_data;
pub use cmsg_warden_data::*;
pub(crate) mod cmsg_who;
pub use cmsg_who::*;
pub(crate) mod cmsg_whois;
pub use cmsg_whois::*;
pub(crate) mod cmsg_world_teleport;
pub use cmsg_world_teleport::*;
pub(crate) mod cmsg_wrap_item;
pub use cmsg_wrap_item::*;
pub(crate) mod cmsg_zoneupdate;
pub use cmsg_zoneupdate::*;
pub(crate) mod cooldown_spell;
pub use cooldown_spell::*;
pub(crate) mod corpse_query_result;
pub use corpse_query_result::*;
pub use crate::helper::vanilla::*;
pub(crate) mod damage_info;
pub use damage_info::*;
pub(crate) mod duel_winner_reason;
pub use duel_winner_reason::*;
pub(crate) mod emote;
pub use emote::*;
pub(crate) mod environmental_damage_type;
pub use environmental_damage_type::*;
pub(crate) mod experience_award_type;
pub use experience_award_type::*;
pub(crate) mod faction;
pub use faction::*;
pub(crate) mod faction_flag;
pub use faction_flag::*;
pub(crate) mod faction_initializer;
pub use faction_initializer::*;
pub(crate) mod far_sight_operation;
pub use far_sight_operation::*;
pub(crate) mod forced_reaction;
pub use forced_reaction::*;
pub(crate) mod friend;
pub use friend::*;
pub(crate) mod friend_result;
pub use friend_result::*;
pub(crate) mod friend_status;
pub use friend_status::*;
pub(crate) mod gender;
pub use gender::*;
pub(crate) mod gm_survey_question;
pub use gm_survey_question::*;
pub(crate) mod gm_ticket_escalation_status;
pub use gm_ticket_escalation_status::*;
pub(crate) mod gm_ticket_response;
pub use gm_ticket_response::*;
pub(crate) mod gm_ticket_status;
pub use gm_ticket_status::*;
pub(crate) mod gm_ticket_status_response;
pub use gm_ticket_status_response::*;
pub(crate) mod gm_ticket_type;
pub use gm_ticket_type::*;
pub(crate) mod gossip_item;
pub use gossip_item::*;
pub(crate) mod group_list_member;
pub use group_list_member::*;
pub(crate) mod group_loot_setting;
pub use group_loot_setting::*;
pub(crate) mod group_member_online_status;
pub use group_member_online_status::*;
pub(crate) mod group_type;
pub use group_type::*;
pub(crate) mod group_update_flags;
pub use group_update_flags::*;
pub(crate) mod guild_command;
pub use guild_command::*;
pub(crate) mod guild_command_result;
pub use guild_command_result::*;
pub(crate) mod guild_emblem_result;
pub use guild_emblem_result::*;
pub(crate) mod guild_event;
pub use guild_event::*;
pub(crate) mod hit_info;
pub use hit_info::*;
pub(crate) mod info_block;
pub use info_block::*;
pub(crate) mod initial_spell;
pub use initial_spell::*;
pub(crate) mod instance_reset_failed_reason;
pub use instance_reset_failed_reason::*;
pub(crate) mod inventory_result;
pub use inventory_result::*;
pub(crate) mod inventory_type;
pub use inventory_type::*;
pub(crate) mod item_class;
pub use item_class::*;
pub(crate) mod item_damage_type;
pub use item_damage_type::*;
pub(crate) mod item_quality;
pub use item_quality::*;
pub(crate) mod item_spells;
pub use item_spells::*;
pub(crate) mod item_stat;
pub use item_stat::*;
pub(crate) mod key_version;
pub use key_version::*;
pub(crate) mod language;
pub use language::*;
pub(crate) mod list_inventory_item;
pub use list_inventory_item::*;
pub(crate) mod log_format;
pub use log_format::*;
pub(crate) mod logout_result;
pub use logout_result::*;
pub(crate) mod logout_speed;
pub use logout_speed::*;
pub(crate) mod loot_method;
pub use loot_method::*;
pub(crate) mod mail;
pub use mail::*;
pub(crate) mod mail_action;
pub use mail_action::*;
pub(crate) mod mail_result;
pub use mail_result::*;
pub(crate) mod mail_type;
pub use mail_type::*;
pub(crate) mod map;
pub use map::*;
pub(crate) mod meeting_stone_failure;
pub use meeting_stone_failure::*;
pub(crate) mod meeting_stone_status;
pub use meeting_stone_status::*;
pub(crate) mod monster_move_type;
pub use monster_move_type::*;
pub(crate) mod mount_result;
pub use mount_result::*;
pub(crate) mod movement_block;
pub use movement_block::*;
pub(crate) mod movement_flags;
pub use movement_flags::*;
pub(crate) mod movement_info;
pub use movement_info::*;
pub(crate) mod msg_auction_hello_client;
pub use msg_auction_hello_client::*;
pub(crate) mod msg_auction_hello_server;
pub use msg_auction_hello_server::*;
pub(crate) mod msg_battleground_player_positions_client;
pub use msg_battleground_player_positions_client::*;
pub(crate) mod msg_battleground_player_positions_server;
pub use msg_battleground_player_positions_server::*;
pub(crate) mod msg_corpse_query_client;
pub use msg_corpse_query_client::*;
pub(crate) mod msg_corpse_query_server;
pub use msg_corpse_query_server::*;
pub(crate) mod msg_inspect_honor_stats_client;
pub use msg_inspect_honor_stats_client::*;
pub(crate) mod msg_inspect_honor_stats_server;
pub use msg_inspect_honor_stats_server::*;
pub(crate) mod msg_list_stabled_pets_client;
pub use msg_list_stabled_pets_client::*;
pub(crate) mod msg_list_stabled_pets_server;
pub use msg_list_stabled_pets_server::*;
pub(crate) mod msg_looking_for_group_client;
pub use msg_looking_for_group_client::*;
pub(crate) mod msg_looking_for_group_server;
pub use msg_looking_for_group_server::*;
pub(crate) mod msg_minimap_ping_client;
pub use msg_minimap_ping_client::*;
pub(crate) mod msg_minimap_ping_server;
pub use msg_minimap_ping_server::*;
pub(crate) mod msg_move_fall_land_client;
pub use msg_move_fall_land_client::*;
pub(crate) mod msg_move_fall_land_server;
pub use msg_move_fall_land_server::*;
pub(crate) mod msg_move_heartbeat_client;
pub use msg_move_heartbeat_client::*;
pub(crate) mod msg_move_heartbeat_server;
pub use msg_move_heartbeat_server::*;
pub(crate) mod msg_move_jump_client;
pub use msg_move_jump_client::*;
pub(crate) mod msg_move_jump_server;
pub use msg_move_jump_server::*;
pub(crate) mod msg_move_set_facing_client;
pub use msg_move_set_facing_client::*;
pub(crate) mod msg_move_set_facing_server;
pub use msg_move_set_facing_server::*;
pub(crate) mod msg_move_set_pitch_client;
pub use msg_move_set_pitch_client::*;
pub(crate) mod msg_move_set_pitch_server;
pub use msg_move_set_pitch_server::*;
pub(crate) mod msg_move_set_run_mode_client;
pub use msg_move_set_run_mode_client::*;
pub(crate) mod msg_move_set_run_mode_server;
pub use msg_move_set_run_mode_server::*;
pub(crate) mod msg_move_set_walk_mode_client;
pub use msg_move_set_walk_mode_client::*;
pub(crate) mod msg_move_set_walk_mode_server;
pub use msg_move_set_walk_mode_server::*;
pub(crate) mod msg_move_start_backward_client;
pub use msg_move_start_backward_client::*;
pub(crate) mod msg_move_start_backward_server;
pub use msg_move_start_backward_server::*;
pub(crate) mod msg_move_start_forward_client;
pub use msg_move_start_forward_client::*;
pub(crate) mod msg_move_start_forward_server;
pub use msg_move_start_forward_server::*;
pub(crate) mod msg_move_start_pitch_down_client;
pub use msg_move_start_pitch_down_client::*;
pub(crate) mod msg_move_start_pitch_down_server;
pub use msg_move_start_pitch_down_server::*;
pub(crate) mod msg_move_start_pitch_up_client;
pub use msg_move_start_pitch_up_client::*;
pub(crate) mod msg_move_start_pitch_up_server;
pub use msg_move_start_pitch_up_server::*;
pub(crate) mod msg_move_start_strafe_left_client;
pub use msg_move_start_strafe_left_client::*;
pub(crate) mod msg_move_start_strafe_left_server;
pub use msg_move_start_strafe_left_server::*;
pub(crate) mod msg_move_start_strafe_right_client;
pub use msg_move_start_strafe_right_client::*;
pub(crate) mod msg_move_start_strafe_right_server;
pub use msg_move_start_strafe_right_server::*;
pub(crate) mod msg_move_start_swim_client;
pub use msg_move_start_swim_client::*;
pub(crate) mod msg_move_start_swim_server;
pub use msg_move_start_swim_server::*;
pub(crate) mod msg_move_start_turn_left_client;
pub use msg_move_start_turn_left_client::*;
pub(crate) mod msg_move_start_turn_left_server;
pub use msg_move_start_turn_left_server::*;
pub(crate) mod msg_move_start_turn_right_client;
pub use msg_move_start_turn_right_client::*;
pub(crate) mod msg_move_start_turn_right_server;
pub use msg_move_start_turn_right_server::*;
pub(crate) mod msg_move_stop_client;
pub use msg_move_stop_client::*;
pub(crate) mod msg_move_stop_pitch_client;
pub use msg_move_stop_pitch_client::*;
pub(crate) mod msg_move_stop_pitch_server;
pub use msg_move_stop_pitch_server::*;
pub(crate) mod msg_move_stop_server;
pub use msg_move_stop_server::*;
pub(crate) mod msg_move_stop_strafe_client;
pub use msg_move_stop_strafe_client::*;
pub(crate) mod msg_move_stop_strafe_server;
pub use msg_move_stop_strafe_server::*;
pub(crate) mod msg_move_stop_swim_client;
pub use msg_move_stop_swim_client::*;
pub(crate) mod msg_move_stop_swim_server;
pub use msg_move_stop_swim_server::*;
pub(crate) mod msg_move_stop_turn_client;
pub use msg_move_stop_turn_client::*;
pub(crate) mod msg_move_stop_turn_server;
pub use msg_move_stop_turn_server::*;
pub(crate) mod msg_move_teleport_ack_client;
pub use msg_move_teleport_ack_client::*;
pub(crate) mod msg_move_teleport_ack_server;
pub use msg_move_teleport_ack_server::*;
pub(crate) mod msg_move_worldport_ack;
pub use msg_move_worldport_ack::*;
pub(crate) mod msg_petition_decline;
pub use msg_petition_decline::*;
pub(crate) mod msg_petition_rename;
pub use msg_petition_rename::*;
pub(crate) mod msg_pvp_log_data_client;
pub use msg_pvp_log_data_client::*;
pub(crate) mod msg_pvp_log_data_server;
pub use msg_pvp_log_data_server::*;
pub(crate) mod msg_query_next_mail_time_client;
pub use msg_query_next_mail_time_client::*;
pub(crate) mod msg_query_next_mail_time_server;
pub use msg_query_next_mail_time_server::*;
pub(crate) mod msg_quest_push_result;
pub use msg_quest_push_result::*;
pub(crate) mod msg_raid_ready_check_client;
pub use msg_raid_ready_check_client::*;
pub(crate) mod msg_raid_ready_check_server;
pub use msg_raid_ready_check_server::*;
pub(crate) mod msg_raid_target_update_client;
pub use msg_raid_target_update_client::*;
pub(crate) mod msg_raid_target_update_server;
pub use msg_raid_target_update_server::*;
pub(crate) mod msg_random_roll_client;
pub use msg_random_roll_client::*;
pub(crate) mod msg_random_roll_server;
pub use msg_random_roll_server::*;
pub(crate) mod msg_save_guild_emblem_client;
pub use msg_save_guild_emblem_client::*;
pub(crate) mod msg_save_guild_emblem_server;
pub use msg_save_guild_emblem_server::*;
pub(crate) mod msg_tabardvendor_activate;
pub use msg_tabardvendor_activate::*;
pub(crate) mod msg_talent_wipe_confirm_client;
pub use msg_talent_wipe_confirm_client::*;
pub(crate) mod msg_talent_wipe_confirm_server;
pub use msg_talent_wipe_confirm_server::*;
pub(crate) mod new_item_chat_alert;
pub use new_item_chat_alert::*;
pub(crate) mod new_item_creation_type;
pub use new_item_creation_type::*;
pub(crate) mod new_item_source;
pub use new_item_source::*;
pub(crate) mod npc_text_update;
pub use npc_text_update::*;
pub(crate) mod npc_text_update_emote;
pub use npc_text_update_emote::*;
pub(crate) mod object;
pub use object::*;
pub(crate) mod object_type;
pub use object_type::*;
pub mod opcodes;
pub(crate) mod party_operation;
pub use party_operation::*;
pub(crate) mod party_result;
pub use party_result::*;
pub(crate) mod pet_command_state;
pub use pet_command_state::*;
pub(crate) mod pet_enabled;
pub use pet_enabled::*;
pub(crate) mod pet_feedback;
pub use pet_feedback::*;
pub(crate) mod pet_react_state;
pub use pet_react_state::*;
pub(crate) mod pet_spell_cooldown;
pub use pet_spell_cooldown::*;
pub(crate) mod pet_talk_reason;
pub use pet_talk_reason::*;
pub(crate) mod pet_tame_failure_reason;
pub use pet_tame_failure_reason::*;
pub(crate) mod petition_result;
pub use petition_result::*;
pub(crate) mod petition_showlist;
pub use petition_showlist::*;
pub(crate) mod petition_turn_in_result;
pub use petition_turn_in_result::*;
pub(crate) mod player_chat_tag;
pub use player_chat_tag::*;
pub(crate) mod power;
pub use power::*;
pub(crate) mod power_type;
pub use power_type::*;
pub(crate) mod pvp_rank;
pub use pvp_rank::*;
pub(crate) mod quest_completable;
pub use quest_completable::*;
pub(crate) mod quest_details_emote;
pub use quest_details_emote::*;
pub(crate) mod quest_failed_reason;
pub use quest_failed_reason::*;
pub(crate) mod quest_giver_status;
pub use quest_giver_status::*;
pub(crate) mod quest_item;
pub use quest_item::*;
pub(crate) mod quest_item_requirement;
pub use quest_item_requirement::*;
pub(crate) mod quest_item_reward;
pub use quest_item_reward::*;
pub(crate) mod quest_objective;
pub use quest_objective::*;
pub(crate) mod quest_party_message;
pub use quest_party_message::*;
pub(crate) mod race;
pub use race::*;
pub(crate) mod raid_group_error;
pub use raid_group_error::*;
pub(crate) mod raid_info;
pub use raid_info::*;
pub(crate) mod raid_instance_message;
pub use raid_instance_message::*;
pub(crate) mod raid_target_index;
pub use raid_target_index::*;
pub(crate) mod raid_target_update;
pub use raid_target_update::*;
pub(crate) mod raid_target_update_type;
pub use raid_target_update_type::*;
pub(crate) mod roll_vote;
pub use roll_vote::*;
pub(crate) mod sell_item_result;
pub use sell_item_result::*;
pub(crate) mod server_message_type;
pub use server_message_type::*;
pub(crate) mod sheath_state;
pub use sheath_state::*;
pub(crate) mod simple_spell_cast_result;
pub use simple_spell_cast_result::*;
pub(crate) mod smsg_account_data_times;
pub use smsg_account_data_times::*;
pub(crate) mod smsg_action_buttons;
pub use smsg_action_buttons::*;
pub(crate) mod smsg_activatetaxireply;
pub use smsg_activatetaxireply::*;
pub(crate) mod smsg_addon_info;
pub use smsg_addon_info::*;
pub(crate) mod smsg_ai_reaction;
pub use smsg_ai_reaction::*;
pub(crate) mod smsg_area_spirit_healer_time;
pub use smsg_area_spirit_healer_time::*;
pub(crate) mod smsg_area_trigger_message;
pub use smsg_area_trigger_message::*;
pub(crate) mod smsg_attackerstateupdate;
pub use smsg_attackerstateupdate::*;
pub(crate) mod smsg_attackstart;
pub use smsg_attackstart::*;
pub(crate) mod smsg_attackstop;
pub use smsg_attackstop::*;
pub(crate) mod smsg_attackswing_badfacing;
pub use smsg_attackswing_badfacing::*;
pub(crate) mod smsg_attackswing_cant_attack;
pub use smsg_attackswing_cant_attack::*;
pub(crate) mod smsg_attackswing_deadtarget;
pub use smsg_attackswing_deadtarget::*;
pub(crate) mod smsg_attackswing_notinrange;
pub use smsg_attackswing_notinrange::*;
pub(crate) mod smsg_attackswing_notstanding;
pub use smsg_attackswing_notstanding::*;
pub(crate) mod smsg_auction_bidder_list_result;
pub use smsg_auction_bidder_list_result::*;
pub(crate) mod smsg_auction_bidder_notification;
pub use smsg_auction_bidder_notification::*;
pub(crate) mod smsg_auction_command_result;
pub use smsg_auction_command_result::*;
pub(crate) mod smsg_auction_list_result;
pub use smsg_auction_list_result::*;
pub(crate) mod smsg_auction_owner_list_result;
pub use smsg_auction_owner_list_result::*;
pub(crate) mod smsg_auction_owner_notification;
pub use smsg_auction_owner_notification::*;
pub(crate) mod smsg_auction_removed_notification;
pub use smsg_auction_removed_notification::*;
pub(crate) mod smsg_auth_challenge;
pub use smsg_auth_challenge::*;
pub(crate) mod smsg_auth_response;
pub use smsg_auth_response::*;
pub(crate) mod smsg_battlefield_list;
pub use smsg_battlefield_list::*;
pub(crate) mod smsg_battlefield_status;
pub use smsg_battlefield_status::*;
pub(crate) mod smsg_battleground_player_joined;
pub use smsg_battleground_player_joined::*;
pub(crate) mod smsg_battleground_player_left;
pub use smsg_battleground_player_left::*;
pub(crate) mod smsg_binder_confirm;
pub use smsg_binder_confirm::*;
pub(crate) mod smsg_bindpointupdate;
pub use smsg_bindpointupdate::*;
pub(crate) mod smsg_buy_bank_slot_result;
pub use smsg_buy_bank_slot_result::*;
pub(crate) mod smsg_buy_failed;
pub use smsg_buy_failed::*;
pub(crate) mod smsg_buy_item;
pub use smsg_buy_item::*;
pub(crate) mod smsg_cancel_auto_repeat;
pub use smsg_cancel_auto_repeat::*;
pub(crate) mod smsg_cancel_combat;
pub use smsg_cancel_combat::*;
pub(crate) mod smsg_cast_result;
pub use smsg_cast_result::*;
pub(crate) mod smsg_channel_list;
pub use smsg_channel_list::*;
pub(crate) mod smsg_channel_notify;
pub use smsg_channel_notify::*;
pub(crate) mod smsg_char_create;
pub use smsg_char_create::*;
pub(crate) mod smsg_char_delete;
pub use smsg_char_delete::*;
pub(crate) mod smsg_char_enum;
pub use smsg_char_enum::*;
pub(crate) mod smsg_char_rename;
pub use smsg_char_rename::*;
pub(crate) mod smsg_character_login_failed;
pub use smsg_character_login_failed::*;
pub(crate) mod smsg_chat_player_not_found;
pub use smsg_chat_player_not_found::*;
pub(crate) mod smsg_chat_restricted;
pub use smsg_chat_restricted::*;
pub(crate) mod smsg_chat_wrong_faction;
pub use smsg_chat_wrong_faction::*;
pub(crate) mod smsg_clear_cooldown;
pub use smsg_clear_cooldown::*;
pub(crate) mod smsg_client_control_update;
pub use smsg_client_control_update::*;
pub(crate) mod smsg_compressed_moves;
pub use smsg_compressed_moves::*;
pub(crate) mod smsg_compressed_update_object;
pub use smsg_compressed_update_object::*;
pub(crate) mod smsg_cooldown_event;
pub use smsg_cooldown_event::*;
pub(crate) mod smsg_corpse_reclaim_delay;
pub use smsg_corpse_reclaim_delay::*;
pub(crate) mod smsg_creature_query_response;
pub use smsg_creature_query_response::*;
pub(crate) mod smsg_defense_message;
pub use smsg_defense_message::*;
pub(crate) mod smsg_destroy_object;
pub use smsg_destroy_object::*;
pub(crate) mod smsg_dismountresult;
pub use smsg_dismountresult::*;
pub(crate) mod smsg_dispel_failed;
pub use smsg_dispel_failed::*;
pub(crate) mod smsg_duel_complete;
pub use smsg_duel_complete::*;
pub(crate) mod smsg_duel_countdown;
pub use smsg_duel_countdown::*;
pub(crate) mod smsg_duel_inbounds;
pub use smsg_duel_inbounds::*;
pub(crate) mod smsg_duel_outofbounds;
pub use smsg_duel_outofbounds::*;
pub(crate) mod smsg_duel_requested;
pub use smsg_duel_requested::*;
pub(crate) mod smsg_duel_winner;
pub use smsg_duel_winner::*;
pub(crate) mod smsg_durability_damage_death;
pub use smsg_durability_damage_death::*;
pub(crate) mod smsg_emote;
pub use smsg_emote::*;
pub(crate) mod smsg_enchantmentlog;
pub use smsg_enchantmentlog::*;
pub(crate) mod smsg_environmentaldamagelog;
pub use smsg_environmentaldamagelog::*;
pub(crate) mod smsg_expected_spam_records;
pub use smsg_expected_spam_records::*;
pub(crate) mod smsg_exploration_experience;
pub use smsg_exploration_experience::*;
pub(crate) mod smsg_feign_death_resisted;
pub use smsg_feign_death_resisted::*;
pub(crate) mod smsg_fish_escaped;
pub use smsg_fish_escaped::*;
pub(crate) mod smsg_fish_not_hooked;
pub use smsg_fish_not_hooked::*;
pub(crate) mod smsg_force_move_root;
pub use smsg_force_move_root::*;
pub(crate) mod smsg_force_move_unroot;
pub use smsg_force_move_unroot::*;
pub(crate) mod smsg_force_run_back_speed_change;
pub use smsg_force_run_back_speed_change::*;
pub(crate) mod smsg_force_run_speed_change;
pub use smsg_force_run_speed_change::*;
pub(crate) mod smsg_force_swim_back_speed_change;
pub use smsg_force_swim_back_speed_change::*;
pub(crate) mod smsg_force_swim_speed_change;
pub use smsg_force_swim_speed_change::*;
pub(crate) mod smsg_force_turn_rate_change;
pub use smsg_force_turn_rate_change::*;
pub(crate) mod smsg_force_walk_speed_change;
pub use smsg_force_walk_speed_change::*;
pub(crate) mod smsg_friend_list;
pub use smsg_friend_list::*;
pub(crate) mod smsg_friend_status;
pub use smsg_friend_status::*;
pub(crate) mod smsg_gameobject_custom_anim;
pub use smsg_gameobject_custom_anim::*;
pub(crate) mod smsg_gameobject_despawn_anim;
pub use smsg_gameobject_despawn_anim::*;
pub(crate) mod smsg_gameobject_pagetext;
pub use smsg_gameobject_pagetext::*;
pub(crate) mod smsg_gameobject_query_response;
pub use smsg_gameobject_query_response::*;
pub(crate) mod smsg_gameobject_reset_state;
pub use smsg_gameobject_reset_state::*;
pub(crate) mod smsg_gameobject_spawn_anim;
pub use smsg_gameobject_spawn_anim::*;
pub(crate) mod smsg_gm_ticket_status_update;
pub use smsg_gm_ticket_status_update::*;
pub(crate) mod smsg_gmticket_create;
pub use smsg_gmticket_create::*;
pub(crate) mod smsg_gmticket_deleteticket;
pub use smsg_gmticket_deleteticket::*;
pub(crate) mod smsg_gmticket_getticket;
pub use smsg_gmticket_getticket::*;
pub(crate) mod smsg_gmticket_systemstatus;
pub use smsg_gmticket_systemstatus::*;
pub(crate) mod smsg_gmticket_updatetext;
pub use smsg_gmticket_updatetext::*;
pub(crate) mod smsg_gossip_complete;
pub use smsg_gossip_complete::*;
pub(crate) mod smsg_gossip_message;
pub use smsg_gossip_message::*;
pub(crate) mod smsg_gossip_poi;
pub use smsg_gossip_poi::*;
pub(crate) mod smsg_group_decline;
pub use smsg_group_decline::*;
pub(crate) mod smsg_group_destroyed;
pub use smsg_group_destroyed::*;
pub(crate) mod smsg_group_invite;
pub use smsg_group_invite::*;
pub(crate) mod smsg_group_joined_battleground;
pub use smsg_group_joined_battleground::*;
pub(crate) mod smsg_group_list;
pub use smsg_group_list::*;
pub(crate) mod smsg_group_set_leader;
pub use smsg_group_set_leader::*;
pub(crate) mod smsg_group_uninvite;
pub use smsg_group_uninvite::*;
pub(crate) mod smsg_guild_command_result;
pub use smsg_guild_command_result::*;
pub(crate) mod smsg_guild_event;
pub use smsg_guild_event::*;
pub(crate) mod smsg_guild_info;
pub use smsg_guild_info::*;
pub(crate) mod smsg_guild_invite;
pub use smsg_guild_invite::*;
pub(crate) mod smsg_guild_query_response;
pub use smsg_guild_query_response::*;
pub(crate) mod smsg_guild_roster;
pub use smsg_guild_roster::*;
pub(crate) mod smsg_ignore_list;
pub use smsg_ignore_list::*;
pub(crate) mod smsg_init_world_states;
pub use smsg_init_world_states::*;
pub(crate) mod smsg_initial_spells;
pub use smsg_initial_spells::*;
pub(crate) mod smsg_initialize_factions;
pub use smsg_initialize_factions::*;
pub(crate) mod smsg_inspect;
pub use smsg_inspect::*;
pub(crate) mod smsg_instance_reset;
pub use smsg_instance_reset::*;
pub(crate) mod smsg_instance_reset_failed;
pub use smsg_instance_reset_failed::*;
pub(crate) mod smsg_instance_save_created;
pub use smsg_instance_save_created::*;
pub(crate) mod smsg_invalidate_player;
pub use smsg_invalidate_player::*;
pub(crate) mod smsg_inventory_change_failure;
pub use smsg_inventory_change_failure::*;
pub(crate) mod smsg_item_cooldown;
pub use smsg_item_cooldown::*;
pub(crate) mod smsg_item_enchant_time_update;
pub use smsg_item_enchant_time_update::*;
pub(crate) mod smsg_item_name_query_response;
pub use smsg_item_name_query_response::*;
pub(crate) mod smsg_item_push_result;
pub use smsg_item_push_result::*;
pub(crate) mod smsg_item_query_single_response;
pub use smsg_item_query_single_response::*;
pub(crate) mod smsg_item_text_query_response;
pub use smsg_item_text_query_response::*;
pub(crate) mod smsg_item_time_update;
pub use smsg_item_time_update::*;
pub(crate) mod smsg_learned_spell;
pub use smsg_learned_spell::*;
pub(crate) mod smsg_levelup_info;
pub use smsg_levelup_info::*;
pub(crate) mod smsg_list_inventory;
pub use smsg_list_inventory::*;
pub(crate) mod smsg_log_xpgain;
pub use smsg_log_xpgain::*;
pub(crate) mod smsg_login_settimespeed;
pub use smsg_login_settimespeed::*;
pub(crate) mod smsg_login_verify_world;
pub use smsg_login_verify_world::*;
pub(crate) mod smsg_logout_cancel_ack;
pub use smsg_logout_cancel_ack::*;
pub(crate) mod smsg_logout_complete;
pub use smsg_logout_complete::*;
pub(crate) mod smsg_logout_response;
pub use smsg_logout_response::*;
pub(crate) mod smsg_loot_all_passed;
pub use smsg_loot_all_passed::*;
pub(crate) mod smsg_loot_clear_money;
pub use smsg_loot_clear_money::*;
pub(crate) mod smsg_loot_master_list;
pub use smsg_loot_master_list::*;
pub(crate) mod smsg_loot_money_notify;
pub use smsg_loot_money_notify::*;
pub(crate) mod smsg_loot_release_response;
pub use smsg_loot_release_response::*;
pub(crate) mod smsg_loot_removed;
pub use smsg_loot_removed::*;
pub(crate) mod smsg_loot_response;
pub use smsg_loot_response::*;
pub(crate) mod smsg_loot_roll;
pub use smsg_loot_roll::*;
pub(crate) mod smsg_loot_roll_won;
pub use smsg_loot_roll_won::*;
pub(crate) mod smsg_loot_start_roll;
pub use smsg_loot_start_roll::*;
pub(crate) mod smsg_mail_list_result;
pub use smsg_mail_list_result::*;
pub(crate) mod smsg_meetingstone_complete;
pub use smsg_meetingstone_complete::*;
pub(crate) mod smsg_meetingstone_in_progress;
pub use smsg_meetingstone_in_progress::*;
pub(crate) mod smsg_meetingstone_joinfailed;
pub use smsg_meetingstone_joinfailed::*;
pub(crate) mod smsg_meetingstone_member_added;
pub use smsg_meetingstone_member_added::*;
pub(crate) mod smsg_meetingstone_setqueue;
pub use smsg_meetingstone_setqueue::*;
pub(crate) mod smsg_messagechat;
pub use smsg_messagechat::*;
pub(crate) mod smsg_monster_move;
pub use smsg_monster_move::*;
pub(crate) mod smsg_monster_move_transport;
pub use smsg_monster_move_transport::*;
pub(crate) mod smsg_mountresult;
pub use smsg_mountresult::*;
pub(crate) mod smsg_mountspecial_anim;
pub use smsg_mountspecial_anim::*;
pub(crate) mod smsg_move_feather_fall;
pub use smsg_move_feather_fall::*;
pub(crate) mod smsg_move_knock_back;
pub use smsg_move_knock_back::*;
pub(crate) mod smsg_move_land_walk;
pub use smsg_move_land_walk::*;
pub(crate) mod smsg_move_normal_fall;
pub use smsg_move_normal_fall::*;
pub(crate) mod smsg_move_set_hover;
pub use smsg_move_set_hover::*;
pub(crate) mod smsg_move_unset_hover;
pub use smsg_move_unset_hover::*;
pub(crate) mod smsg_move_water_walk;
pub use smsg_move_water_walk::*;
pub(crate) mod smsg_name_query_response;
pub use smsg_name_query_response::*;
pub(crate) mod smsg_new_taxi_path;
pub use smsg_new_taxi_path::*;
pub(crate) mod smsg_new_world;
pub use smsg_new_world::*;
pub(crate) mod smsg_notification;
pub use smsg_notification::*;
pub(crate) mod smsg_npc_text_update;
pub use smsg_npc_text_update::*;
pub(crate) mod smsg_open_container;
pub use smsg_open_container::*;
pub(crate) mod smsg_page_text_query_response;
pub use smsg_page_text_query_response::*;
pub(crate) mod smsg_party_command_result;
pub use smsg_party_command_result::*;
pub(crate) mod smsg_party_member_stats;
pub use smsg_party_member_stats::*;
pub(crate) mod smsg_party_member_stats_full;
pub use smsg_party_member_stats_full::*;
pub(crate) mod smsg_partykilllog;
pub use smsg_partykilllog::*;
pub(crate) mod smsg_pause_mirror_timer;
pub use smsg_pause_mirror_timer::*;
pub(crate) mod smsg_periodicauralog;
pub use smsg_periodicauralog::*;
pub(crate) mod smsg_pet_action_feedback;
pub use smsg_pet_action_feedback::*;
pub(crate) mod smsg_pet_action_sound;
pub use smsg_pet_action_sound::*;
pub(crate) mod smsg_pet_broken;
pub use smsg_pet_broken::*;
pub(crate) mod smsg_pet_cast_failed;
pub use smsg_pet_cast_failed::*;
pub(crate) mod smsg_pet_dismiss_sound;
pub use smsg_pet_dismiss_sound::*;
pub(crate) mod smsg_pet_mode;
pub use smsg_pet_mode::*;
pub(crate) mod smsg_pet_name_invalid;
pub use smsg_pet_name_invalid::*;
pub(crate) mod smsg_pet_name_query_response;
pub use smsg_pet_name_query_response::*;
pub(crate) mod smsg_pet_spells;
pub use smsg_pet_spells::*;
pub(crate) mod smsg_pet_tame_failure;
pub use smsg_pet_tame_failure::*;
pub(crate) mod smsg_pet_unlearn_confirm;
pub use smsg_pet_unlearn_confirm::*;
pub(crate) mod smsg_petition_query_response;
pub use smsg_petition_query_response::*;
pub(crate) mod smsg_petition_show_signatures;
pub use smsg_petition_show_signatures::*;
pub(crate) mod smsg_petition_showlist;
pub use smsg_petition_showlist::*;
pub(crate) mod smsg_petition_sign_results;
pub use smsg_petition_sign_results::*;
pub(crate) mod smsg_play_music;
pub use smsg_play_music::*;
pub(crate) mod smsg_play_object_sound;
pub use smsg_play_object_sound::*;
pub(crate) mod smsg_play_sound;
pub use smsg_play_sound::*;
pub(crate) mod smsg_play_spell_impact;
pub use smsg_play_spell_impact::*;
pub(crate) mod smsg_play_spell_visual;
pub use smsg_play_spell_visual::*;
pub(crate) mod smsg_played_time;
pub use smsg_played_time::*;
pub(crate) mod smsg_player_skinned;
pub use smsg_player_skinned::*;
pub(crate) mod smsg_playerbound;
pub use smsg_playerbound::*;
pub(crate) mod smsg_pong;
pub use smsg_pong::*;
pub(crate) mod smsg_procresist;
pub use smsg_procresist::*;
pub(crate) mod smsg_pvp_credit;
pub use smsg_pvp_credit::*;
pub(crate) mod smsg_query_time_response;
pub use smsg_query_time_response::*;
pub(crate) mod smsg_quest_confirm_accept;
pub use smsg_quest_confirm_accept::*;
pub(crate) mod smsg_quest_query_response;
pub use smsg_quest_query_response::*;
pub(crate) mod smsg_questgiver_offer_reward;
pub use smsg_questgiver_offer_reward::*;
pub(crate) mod smsg_questgiver_quest_complete;
pub use smsg_questgiver_quest_complete::*;
pub(crate) mod smsg_questgiver_quest_details;
pub use smsg_questgiver_quest_details::*;
pub(crate) mod smsg_questgiver_quest_failed;
pub use smsg_questgiver_quest_failed::*;
pub(crate) mod smsg_questgiver_quest_invalid;
pub use smsg_questgiver_quest_invalid::*;
pub(crate) mod smsg_questgiver_quest_list;
pub use smsg_questgiver_quest_list::*;
pub(crate) mod smsg_questgiver_request_items;
pub use smsg_questgiver_request_items::*;
pub(crate) mod smsg_questgiver_status;
pub use smsg_questgiver_status::*;
pub(crate) mod smsg_questlog_full;
pub use smsg_questlog_full::*;
pub(crate) mod smsg_questupdate_add_item;
pub use smsg_questupdate_add_item::*;
pub(crate) mod smsg_questupdate_add_kill;
pub use smsg_questupdate_add_kill::*;
pub(crate) mod smsg_questupdate_complete;
pub use smsg_questupdate_complete::*;
pub(crate) mod smsg_questupdate_failed;
pub use smsg_questupdate_failed::*;
pub(crate) mod smsg_questupdate_failedtimer;
pub use smsg_questupdate_failedtimer::*;
pub(crate) mod smsg_raid_group_only;
pub use smsg_raid_group_only::*;
pub(crate) mod smsg_raid_instance_info;
pub use smsg_raid_instance_info::*;
pub(crate) mod smsg_raid_instance_message;
pub use smsg_raid_instance_message::*;
pub(crate) mod smsg_read_item_failed;
pub use smsg_read_item_failed::*;
pub(crate) mod smsg_read_item_ok;
pub use smsg_read_item_ok::*;
pub(crate) mod smsg_received_mail;
pub use smsg_received_mail::*;
pub(crate) mod smsg_removed_spell;
pub use smsg_removed_spell::*;
pub(crate) mod smsg_resistlog;
pub use smsg_resistlog::*;
pub(crate) mod smsg_resurrect_request;
pub use smsg_resurrect_request::*;
pub(crate) mod smsg_sell_item;
pub use smsg_sell_item::*;
pub(crate) mod smsg_send_mail_result;
pub use smsg_send_mail_result::*;
pub(crate) mod smsg_server_message;
pub use smsg_server_message::*;
pub(crate) mod smsg_set_faction_standing;
pub use smsg_set_faction_standing::*;
pub(crate) mod smsg_set_faction_visible;
pub use smsg_set_faction_visible::*;
pub(crate) mod smsg_set_flat_spell_modifier;
pub use smsg_set_flat_spell_modifier::*;
pub(crate) mod smsg_set_forced_reactions;
pub use smsg_set_forced_reactions::*;
pub(crate) mod smsg_set_pct_spell_modifier;
pub use smsg_set_pct_spell_modifier::*;
pub(crate) mod smsg_set_proficiency;
pub use smsg_set_proficiency::*;
pub(crate) mod smsg_set_rest_start;
pub use smsg_set_rest_start::*;
pub(crate) mod smsg_show_bank;
pub use smsg_show_bank::*;
pub(crate) mod smsg_showtaxinodes;
pub use smsg_showtaxinodes::*;
pub(crate) mod smsg_spell_cooldown;
pub use smsg_spell_cooldown::*;
pub(crate) mod smsg_spell_delayed;
pub use smsg_spell_delayed::*;
pub(crate) mod smsg_spell_failed_other;
pub use smsg_spell_failed_other::*;
pub(crate) mod smsg_spell_failure;
pub use smsg_spell_failure::*;
pub(crate) mod smsg_spell_go;
pub use smsg_spell_go::*;
pub(crate) mod smsg_spell_start;
pub use smsg_spell_start::*;
pub(crate) mod smsg_spell_update_chain_targets;
pub use smsg_spell_update_chain_targets::*;
pub(crate) mod smsg_spelldamageshield;
pub use smsg_spelldamageshield::*;
pub(crate) mod smsg_spelldispellog;
pub use smsg_spelldispellog::*;
pub(crate) mod smsg_spellenergizelog;
pub use smsg_spellenergizelog::*;
pub(crate) mod smsg_spellheallog;
pub use smsg_spellheallog::*;
pub(crate) mod smsg_spellinstakilllog;
pub use smsg_spellinstakilllog::*;
pub(crate) mod smsg_spelllogexecute;
pub use smsg_spelllogexecute::*;
pub(crate) mod smsg_spelllogmiss;
pub use smsg_spelllogmiss::*;
pub(crate) mod smsg_spellnonmeleedamagelog;
pub use smsg_spellnonmeleedamagelog::*;
pub(crate) mod smsg_spellordamage_immune;
pub use smsg_spellordamage_immune::*;
pub(crate) mod smsg_spirit_healer_confirm;
pub use smsg_spirit_healer_confirm::*;
pub(crate) mod smsg_spline_move_feather_fall;
pub use smsg_spline_move_feather_fall::*;
pub(crate) mod smsg_spline_move_land_walk;
pub use smsg_spline_move_land_walk::*;
pub(crate) mod smsg_spline_move_normal_fall;
pub use smsg_spline_move_normal_fall::*;
pub(crate) mod smsg_spline_move_root;
pub use smsg_spline_move_root::*;
pub(crate) mod smsg_spline_move_set_hover;
pub use smsg_spline_move_set_hover::*;
pub(crate) mod smsg_spline_move_set_run_mode;
pub use smsg_spline_move_set_run_mode::*;
pub(crate) mod smsg_spline_move_set_walk_mode;
pub use smsg_spline_move_set_walk_mode::*;
pub(crate) mod smsg_spline_move_start_swim;
pub use smsg_spline_move_start_swim::*;
pub(crate) mod smsg_spline_move_stop_swim;
pub use smsg_spline_move_stop_swim::*;
pub(crate) mod smsg_spline_move_unroot;
pub use smsg_spline_move_unroot::*;
pub(crate) mod smsg_spline_move_unset_hover;
pub use smsg_spline_move_unset_hover::*;
pub(crate) mod smsg_spline_move_water_walk;
pub use smsg_spline_move_water_walk::*;
pub(crate) mod smsg_spline_set_run_back_speed;
pub use smsg_spline_set_run_back_speed::*;
pub(crate) mod smsg_spline_set_run_speed;
pub use smsg_spline_set_run_speed::*;
pub(crate) mod smsg_spline_set_swim_back_speed;
pub use smsg_spline_set_swim_back_speed::*;
pub(crate) mod smsg_spline_set_swim_speed;
pub use smsg_spline_set_swim_speed::*;
pub(crate) mod smsg_spline_set_turn_rate;
pub use smsg_spline_set_turn_rate::*;
pub(crate) mod smsg_spline_set_walk_speed;
pub use smsg_spline_set_walk_speed::*;
pub(crate) mod smsg_stable_result;
pub use smsg_stable_result::*;
pub(crate) mod smsg_standstate_update;
pub use smsg_standstate_update::*;
pub(crate) mod smsg_start_mirror_timer;
pub use smsg_start_mirror_timer::*;
pub(crate) mod smsg_stop_mirror_timer;
pub use smsg_stop_mirror_timer::*;
pub(crate) mod smsg_summon_request;
pub use smsg_summon_request::*;
pub(crate) mod smsg_superceded_spell;
pub use smsg_superceded_spell::*;
pub(crate) mod smsg_taxinode_status;
pub use smsg_taxinode_status::*;
pub(crate) mod smsg_text_emote;
pub use smsg_text_emote::*;
pub(crate) mod smsg_trade_status;
pub use smsg_trade_status::*;
pub(crate) mod smsg_trade_status_extended;
pub use smsg_trade_status_extended::*;
pub(crate) mod smsg_trainer_buy_failed;
pub use smsg_trainer_buy_failed::*;
pub(crate) mod smsg_trainer_buy_succeeded;
pub use smsg_trainer_buy_succeeded::*;
pub(crate) mod smsg_trainer_list;
pub use smsg_trainer_list::*;
pub(crate) mod smsg_transfer_aborted;
pub use smsg_transfer_aborted::*;
pub(crate) mod smsg_transfer_pending;
pub use smsg_transfer_pending::*;
pub(crate) mod smsg_trigger_cinematic;
pub use smsg_trigger_cinematic::*;
pub(crate) mod smsg_turn_in_petition_results;
pub use smsg_turn_in_petition_results::*;
pub(crate) mod smsg_tutorial_flags;
pub use smsg_tutorial_flags::*;
pub(crate) mod smsg_update_aura_duration;
pub use smsg_update_aura_duration::*;
pub(crate) mod smsg_update_instance_ownership;
pub use smsg_update_instance_ownership::*;
pub(crate) mod smsg_update_last_instance;
pub use smsg_update_last_instance::*;
pub(crate) mod smsg_update_object;
pub use smsg_update_object::*;
pub(crate) mod smsg_update_world_state;
pub use smsg_update_world_state::*;
pub(crate) mod smsg_warden_data;
pub use smsg_warden_data::*;
pub(crate) mod smsg_weather;
pub use smsg_weather::*;
pub(crate) mod smsg_who;
pub use smsg_who::*;
pub(crate) mod smsg_whois;
pub use smsg_whois::*;
pub(crate) mod smsg_zone_under_attack;
pub use smsg_zone_under_attack::*;
pub(crate) mod spell_cast_result;
pub use spell_cast_result::*;
pub(crate) mod spell_cast_target_flags;
pub use spell_cast_target_flags::*;
pub(crate) mod spell_cast_targets;
pub use spell_cast_targets::*;
pub(crate) mod spell_cooldown_status;
pub use spell_cooldown_status::*;
pub(crate) mod spell_effect;
pub use spell_effect::*;
pub(crate) mod spell_log;
pub use spell_log::*;
pub(crate) mod spell_miss;
pub use spell_miss::*;
pub(crate) mod spell_miss_info;
pub use spell_miss_info::*;
pub(crate) mod spell_school;
pub use spell_school::*;
pub(crate) mod spline_flag;
pub use spline_flag::*;
pub(crate) mod stable_result;
pub use stable_result::*;
pub(crate) mod stabled_pet;
pub use stabled_pet::*;
pub(crate) mod status_id;
pub use status_id::*;
pub(crate) mod timer_type;
pub use timer_type::*;
pub(crate) mod trade_slot;
pub use trade_slot::*;
pub(crate) mod trade_status;
pub use trade_status::*;
pub(crate) mod trainer_spell;
pub use trainer_spell::*;
pub(crate) mod trainer_spell_state;
pub use trainer_spell_state::*;
pub(crate) mod training_failure_reason;
pub use training_failure_reason::*;
pub(crate) mod transfer_abort_reason;
pub use transfer_abort_reason::*;
pub(crate) mod transport_info;
pub use transport_info::*;
pub(crate) mod unit_stand_state;
pub use unit_stand_state::*;
pub(crate) mod update_flag;
pub use update_flag::*;
pub(crate) mod update_type;
pub use update_type::*;
pub(crate) mod url_info;
pub use url_info::*;
pub(crate) mod vector3d;
pub use vector3d::*;
pub(crate) mod weather_change_type;
pub use weather_change_type::*;
pub(crate) mod weather_type;
pub use weather_type::*;
pub(crate) mod who_player;
pub use who_player::*;
pub(crate) mod world_result;
pub use world_result::*;
pub(crate) mod world_state;
pub use world_state::*;
